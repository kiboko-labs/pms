datagrids:
  kiboko-pms-products-datagrid:
    source:
      type: orm
      query:
        select:
          - p
          - COUNT(priceLists.id) as priceListsCount
          - inventoryUnit.onHandAmount
          - inventoryUnit.reservedAmount
          - inventoryUnit.incomingAmount
          - inventoryUnit.forecastedAmount
        from:
          - { table: KibokoPricingManagementBundle:Product, alias: p }
        join:
          left:
            - { join: p.priceLists, alias: priceLists }
            - { join: p.inventoryUnit, alias: inventoryUnit }
    columns:
      name:
        label: kiboko_pms.pricing.products.grid.columns.name
      sku:
        label: kiboko_pms.pricing.products.grid.columns.sku
      priceListsCount:
        label: kiboko_pms.pricing.products.grid.columns.priceListsCount
      onHandAmount:
        label: kiboko_pms.pricing.products.grid.columns.onHandAmount
      reservedAmount:
        label: kiboko_pms.pricing.products.grid.columns.reservedAmount
      incomingAmount:
        label: kiboko_pms.pricing.products.grid.columns.incomingAmount
      forecastedAmount:
        label: kiboko_pms.pricing.products.grid.columns.forecastedAmount
    filters:
      columns:
        name:
          type: string
          data_name: p.name
        sku:
          type: string
          data_name: p.sku
#        onHandAmount:
#          type: string
#          data_name: inventoryUnit.onHandAmount
#        reservedAmount:
#          type: string
#          data_name: inventoryUnit.reservedAmount
#        incomingAmount:
#          type: string
#          data_name: inventoryUnit.incomingAmount
#        forecastedAmount:
#          type: string
#          data_name: inventoryUnit.forecastedAmount
    sorters:
      columns:
        name:
          data_name: p.name
        sku:
          data_name: p.sku
#        onHandAmount:
#          data_name: inventoryUnit.onHandAmount
#        reservedAmount:
#          data_name: inventoryUnit.reservedAmount
#        incomingAmount:
#          data_name: inventoryUnit.incomingAmount
#        forecastedAmount:
#          data_name: inventoryUnit.forecastedAmount
      default:
        sku: DESC

    properties:
      id: ~
      price_history_link:
        type:   url
        route:  kiboko_pms_pricing_price_history
        params:
          productId: id
      price_view_link:
        type:   url
        route:  kiboko_pms_pricing_price_list
        params:
          id: id
      inventory_view_link:
        type:   url
        route:  kiboko_pms_pricing_warehouse_inventory_unit
        params:
          id: id
    actions:
      price_graphs:
        type: navigate
        label: oro.grid.action.view
        link: price_history_link
        icon: signal
        rowAction: true
      price_view:
        type: navigate
        label: oro.grid.action.view
        link: price_view_link
        icon: usd
        rowAction: true
      inventory_view:
        type: navigate
        label: oro.grid.action.view
        link: inventory_view_link
        icon: barcode
        rowAction: true

  kiboko-pms-price-list-datagrid:
    source:
      type: orm
      query:
        select:
          - pl
          - COUNT(prices.id) as pricesCount
          - product.name as productName
          - product.sku as productSku
          - customerSegment.name as segmentName
        from:
          - { table: KibokoPricingManagementBundle:PriceList, alias: pl }
        join:
          left:
            - { join: pl.prices, alias: prices }
            - { join: pl.product, alias: product }
            - { join: pl.customerSegment, alias: customerSegment }
        where:
          and:
            - product.id = :productId
      bind_parameters:
        productId: productId
    columns:
      productName:
        label: kiboko_pms.pricing.price_list.grid.columns.productName
      productSku:
        label: kiboko_pms.pricing.price_list.grid.columns.productSku
      segmentName:
        label: kiboko_pms.pricing.price_list.grid.columns.segmentName
      active:
        label: kiboko_pms.pricing.price_list.grid.columns.active
        frontend_type: boolean
      start:
        label: kiboko_pms.pricing.price_list.grid.columns.start
        frontend_type: datetime
      end:
        label: kiboko_pms.pricing.price_list.grid.columns.end
        frontend_type: datetime
      pricesCount:
        label: kiboko_pms.pricing.price_list.grid.columns.pricesCount

    properties:
      id: ~
      price_history_link:
        type:   url
        route:  kiboko_pms_pricing_customer_segment_price_history
        params:
          productId: product.id
          customerSegmentId: customerSegment.id
    actions:
      price_history_view:
        type: navigate
        label: oro.grid.action.view
        link: price_history_link
        icon: time
        rowAction: true

  kiboko-pms-warehouse-inventory-unit-datagrid:
    source:
      type: orm
      query:
        select:
          - wiu
          - product.name as productName
          - warehouse.name as warehouseName
        from:
          - { table: KibokoPricingManagementBundle:WarehouseInventoryUnit, alias: wiu }
        join:
          left:
            - { join: wiu.product, alias: product }
            - { join: wiu.warehouse, alias: warehouse }
        where:
          and:
            - product.id = :productId
      bind_parameters:
        productId: productId
    columns:
      productName:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.productName
      warehouseName:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.warehouseName
      onHandAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.onHandAmount
#        frontend_type: decimal
      reservedAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.reservedAmount
#        frontend_type: decimal
      incomingAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.incomingAmount
#        frontend_type: decimal
      forecastedAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.forecastedAmount
#        frontend_type: decimal

    properties:
      id: ~
      warehouse_link:
        type:   url
        route:  kiboko_pms_pricing_warehouse
        params:
          id: warehouse.id
    actions:
      warehouse_view:
        type: navigate
        label: oro.grid.action.view
        link: warehouse_link
        icon: home
        rowAction: true

  kiboko-pms-warehouse-datagrid:
    source:
      type: orm
      query:
        select:
          - wiu
          - product.name as productName
          - product.sku as productSku
        from:
          - { table: KibokoPricingManagementBundle:WarehouseInventoryUnit, alias: wiu }
        join:
          left:
            - { join: wiu.product, alias: product }
            - { join: wiu.warehouse, alias: warehouse }
        where:
          and:
            - warehouse.id = :warehouseId
      bind_parameters:
        warehouseId: warehouseId
    columns:
      productName:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.productName
      productSku:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.productSku
      onHandAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.onHandAmount
#        frontend_type: decimal
      reservedAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.reservedAmount
#        frontend_type: decimal
      incomingAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.incomingAmount
#        frontend_type: decimal
      forecastedAmount:
        label: kiboko_pms.pricing.warehouse_inventory_unit.grid.columns.forecastedAmount
#        frontend_type: decimal

  kiboko-pms-price-history-datagrid:
    source:
      type: orm
      query:
        select:
          - ph
          - ph.amount as priceAmount
          - ph.currencyCode as priceCurrency
          - customerSegment.name as customerSegmentName
        from:
          - { table: KibokoPricingManagementBundle:PriceHistory, alias: ph }
        join:
          left:
            - { join: ph.price, alias: price }
            - { join: price.priceList, alias: priceList }
            - { join: priceList.product, alias: product }
            - { join: priceList.customerSegment, alias: customerSegment }
        where:
          and:
            - product.id = :productId
      bind_parameters:
        productId: productId
    columns:
      date:
        label: kiboko_pms.pricing.price_history.grid.columns.date
        frontend_type: datetime
      priceAmount:
        label: kiboko_pms.pricing.price_history.grid.columns.priceAmount
      priceCurrency:
        label: kiboko_pms.pricing.price_history.grid.columns.priceCurrency
      customerSegmentName:
        label: kiboko_pms.pricing.price_history.grid.columns.customerSegmentName
    filters:
      columns:
        date:
          type: datetime
          data_name: ph.date
        amount:
          type: number-range
          data_name: ph.amount
        amount:
          type: choice
          data_name: ph.currencyCode
        customerSegment:
          type: choice
          data_name: customerSegment.name
    sorters:
      columns:
        date:
          data_name: ph.date
        priceAmount:
          data_name: ph.amount
        priceCurrency:
          data_name: ph.currencyCode
        customerSegmentName:
          data_name: customerSegment.name
      default:
        date: DESC

  kiboko-pms-customer-segment-price-history-datagrid:
    source:
      type: orm
      query:
        select:
          - ph
          - ph.amount as priceAmount
          - ph.currencyCode as priceCurrency
        from:
          - { table: KibokoPricingManagementBundle:PriceHistory, alias: ph }
        join:
          left:
            - { join: ph.price, alias: price }
            - { join: price.priceList, alias: priceList }
            - { join: priceList.product, alias: product }
            - { join: priceList.customerSegment, alias: customerSegment }
        where:
          and:
            - product.id = :productId
            - customerSegment.id = :customerSegmentId
      bind_parameters:
        productId: productId
        customerSegmentId: customerSegmentId
    columns:
      date:
        label: kiboko_pms.pricing.price_list.grid.columns.date
        frontend_type: datetime
      priceAmount:
        label: kiboko_pms.pricing.price_list.grid.columns.priceAmount
      priceCurrency:
        label: kiboko_pms.pricing.price_list.grid.columns.priceCurrency
      customerSegmentName:
        label: kiboko_pms.pricing.price_list.grid.columns.customerSegmentName
